module X86_UI (CLOCK_50, LEDR);
 input  CLOCK_50;
 output [9:0] LEDR;
 wire oneMSec, oneSecond, oneMinute, oneHour;
 assign LEDR[3:0] = {oneHour, oneMinute, oneSecond, oneMSec};
 clockDivider toMilliSeconds (CLOCK_50, 50000, oneMSec);
 clockDivider toSeconds (oneMSec, 1000, oneSecond);
 clockDivider toMinutes (oneSecond, 60, oneMinute);
 clockDivider toHours (oneMinute, 60, oneHour);
endmodule

module clockDivider (inputHz, maxCount, outputHz);
 input inputHz;
 input [31:0] maxCount;
 output outputHz;
 reg squareWave;
 reg [31:0] count;
 assign outputHz = squareWave;
 always @ (posedge(inputHz))
  begin 
   count <= count==maxCount ? 1 : count + 1;
   squareWave <= count>maxCount>>1 ? 1 : 0;
  end
endmodule
